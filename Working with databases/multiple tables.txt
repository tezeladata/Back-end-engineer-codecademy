SELECT *
FROM orders
JOIN customers
ON orders.customer_id = customers.customer_id;

Let’s break down this command:
The first line selects all columns from our combined table. If we only want to select certain columns, we can specify which ones we want.
The second line specifies the first table that we want to look in, orders
The third line uses JOIN to say that we want to combine information from orders with customers.
The fourth line tells us how to combine the two tables. We want to match orders table’s customer_id column with customers table’s customer_id column.

SELECT * FROM orders JOIN subscriptions ON orders.subscription_id = subscriptions.subscription_id;

When we perform a simple JOIN (often called an inner join) our result only includes rows that match our ON condition.
SELECT COUNT(*) FROM newspaper JOIN online ON newspaper.id = online.id; - Inner join

A left join will keep all rows from the first table, regardless of whether there is a matching row in the second table.
SELECT COUNT(*) FROM newspaper LEFT JOIN online WHERE newspaper.id = online.id;

Primary keys have a few requirements:
None of the values can be NULL.
Each value must be unique (i.e., you can’t have two customers with the same customer_id in the customers table).
A table can not have more than one primary key column.

Sometimes, we just want to combine all rows of one table with all rows of another table.
SELECT shirts.shirt_color,
   pants.pants_color
FROM shirts
CROSS JOIN pants;

The first two lines select the columns shirt_color and pants_color.
The third line pulls data from the table shirts.
The fourth line performs a CROSS JOIN with pants.

Sometimes we just want to stack one dataset on top of the other. Well, the UNION operator allows us to do that.
SQL has strict rules for appending data:
Tables must have the same number of columns.
The columns must have the same data types in the same order as the first table.

JOIN will combine rows from different tables if the join condition is true.
LEFT JOIN will return every row in the left table, and if the join condition is not met, NULL values are used to fill in the columns from the right table.
Primary key is a column that serves a unique identifier for the rows in the table.
Foreign key is a column that contains the primary key to another table.
CROSS JOIN lets us combine all rows of one table with all rows of another table.
UNION stacks one dataset on top of another.
WITH allows us to define one or more temporary tables that can be used in the final query.