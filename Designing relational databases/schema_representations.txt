When designing a database, the most common thing seen among most teams will be a database schema. Database schemas are often drawn as diagrams — big pictures showing every table and how they are connected. These schemas will usually include the columns in each database and arrows showing how a table relates to another table. There are a few different ways to draw out these diagrams, but in this article, we’ll cover an Entity Relationship Diagram, which is a slightly higher level than a basic database schema.

When working with a database, especially larger databases, it can become very difficult to track each relation within the database due to the size and scope of the database. To assist in keeping track of the database, a schema can be used to help visualize the database and all of its relations. These schemas can be as simple as just naming each table and drawing a line to each connected table. 

An Entity Relationship Diagram, or ERD, is a method of diagramming a database with a little more description put into it to allow a designer to better understand the database and the relationships between the tables. This is done by using several different items within the schema. Including:
-- Entities. Entities are usually represented as rectangles and indicate the table’s name.
-- Attributes. Attributes can be found in one of two places, either inside of the entity’s rectangles as rows or outside of the entity represented by an oval that is connected to the entity. In both places, an attribute means the same thing and is the individual columns that will be found within that table or entity.
-- Actions. Actions are seen as diamonds within the ERD and describe the relationships between different entities. For instance, if we have two entities, a Customer and a Credit Card that are both connected, we can put an action in between those two that says “has” to show the designer that a Customer has a Credit Card.
-- Connecting Lines. These lines, just like in a basic schema, are used to show the connection between each entity, action, and attribute.